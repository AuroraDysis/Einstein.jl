var documenterSearchIndex = {"docs":
[{"location":"cheb/#Chebyshev-pseudospectral-method","page":"Chebyshev pseudospectral method","title":"Chebyshev pseudospectral method","text":"","category":"section"},{"location":"cheb/","page":"Chebyshev pseudospectral method","title":"Chebyshev pseudospectral method","text":"Modules = [GRSuite.ChebyshevSuite]","category":"page"},{"location":"cheb/","page":"Chebyshev pseudospectral method","title":"Chebyshev pseudospectral method","text":"Modules = [GRSuite.ChebyshevSuite]","category":"page"},{"location":"cheb/#GRSuite.ChebyshevSuite.ChebGridKind","page":"Chebyshev pseudospectral method","title":"GRSuite.ChebyshevSuite.ChebGridKind","text":"ChebGridKind\n\nEnumeration specifying the type of Chebyshev grid points.\n\nValues\n\nFirstKind: Chebyshev points of the first kind, roots of Chebyshev polynomials\nSecondKind: Chebyshev points of the second kind, extrema of Chebyshev polynomials\n\n\n\n\n\n","category":"type"},{"location":"cheb/#GRSuite.ChebyshevSuite.cheb_asmat-Union{Tuple{TI}, Tuple{TR}, Tuple{Type{TR}, TI}} where {TR<:AbstractFloat, TI<:Integer}","page":"Chebyshev pseudospectral method","title":"GRSuite.ChebyshevSuite.cheb_asmat","text":"cheb_asmat(::Type{TR}, n::TI) where {TR<:AbstractFloat,TI<:Integer}\n\nGenerate the analysis and synthesis matrices for Chebyshev spectral methods.\n\nArguments\n\nTR: Type parameter for the matrix elements (e.g., Float64)\nn: Size of the matrices (n×n)\n\nReturns\n\nTuple{Matrix{TR}, Matrix{TR}}: A tuple containing:\nAnalysis matrix A (n×n)\nSynthesis matrix S (n×n)\n\nMathematical Background\n\nThe analysis and synthesis matrices are used for transforming between physical and spectral spaces in Chebyshev spectral methods.\n\nFor a function f(x) evaluated at Chebyshev points, these matrices allow:\n\nTransformation to spectral coefficients: hatf = Af\nTransformation back to physical space: f = Shatf\n\nThe matrices are constructed using:\n\nS_ij = epsilon_j cosleft(fracpi i jN-1right)\n\nA_ji = frac2c_ic_jN-1S_ij\n\nwhere:\n\nc_k = begincases 12  k=0 text or  k=N-1  1  textotherwise endcases\nepsilon_j = (-1)^j\nij = 0ldotsN-1\n\nExamples\n\n# Generate 8×8 analysis and synthesis matrices with Float64 precision\nA, S = cheb_asmat(Float64, 8)\n\n# Transform function values to spectral coefficients\nf_values = [sin(x) for x in cheb_grid(Float64, 8)]\nf_coeffs = A * f_values\n\n# Transform back to physical space\nf_recovered = S * f_coeffs\n\nSee also: cheb_grid\n\n\n\n\n\n","category":"method"},{"location":"cheb/#GRSuite.ChebyshevSuite.cheb_grid-Union{Tuple{TI}, Tuple{TR}, Tuple{Type{TR}, TI}, Tuple{Type{TR}, TI, GRSuite.ChebyshevSuite.ChebGridKind}} where {TR<:AbstractFloat, TI<:Integer}","page":"Chebyshev pseudospectral method","title":"GRSuite.ChebyshevSuite.cheb_grid","text":"cheb_grid(::Type{TR}, n::TI, kind::ChebGridKind=SecondKind) where {TR<:AbstractFloat,TI<:Integer}\ncheb_grid(::Type{TR}, n::TI, x_min::TR, x_max::TR; kind::ChebGridKind=SecondKind) where {TR<:AbstractFloat,TI<:Integer}\n\nGenerate Chebyshev grid points of either the first or second kind.\n\nArguments\n\nTR: Type parameter for the grid points (e.g., Float64)\nn: Number of grid points\nkind: Type of Chebyshev points (FirstKind or SecondKind)\nx_min: (Optional) Lower bound of the mapped interval\nx_max: (Optional) Upper bound of the mapped interval\n\nReturns\n\nVector of n Chebyshev points of the specified kind, either on [-1,1] or mapped to [xmin,xmax]\n\nMathematical Details\n\nThe standard Chebyshev points are generated on [-1,1]. When mapping to [xmin,xmax], the following linear transformation is applied: x_mapped = fracx_max + x_min2 + fracx_min - x_max2x_cheb\n\nExamples\n\n# Generate 10 Chebyshev points of the second kind on [-1,1]\npoints = cheb_grid(Float64, 10)\n\n# Generate 5 Chebyshev points of the first kind on [-1,1]\npoints = cheb_grid(Float32, 5, FirstKind)\n\n# Generate 10 Chebyshev points mapped to [0,1]\npoints = cheb_grid(Float64, 10, 0.0, 1.0)\n\n\n\n\n\n","category":"method"},{"location":"cheb/#GRSuite.ChebyshevSuite.cheb_grid_first_kind-Union{Tuple{TI}, Tuple{TR}, Tuple{Type{TR}, TI}} where {TR<:AbstractFloat, TI<:Integer}","page":"Chebyshev pseudospectral method","title":"GRSuite.ChebyshevSuite.cheb_grid_first_kind","text":"cheb_grid_first_kind(::Type{TR}, n::TI) where {TR<:AbstractFloat,TI<:Integer}\n\nGenerate Chebyshev points of the first kind on the interval [-1, 1].\n\nArguments\n\nTR: Type parameter for the grid points (e.g., Float64)\nn: Number of grid points\n\nReturns\n\nVector of n Chebyshev points of the first kind\n\nMathematical Formula\n\nx_k = -cosleft(frac(2k + 1)pi2nright) quad k = 01ldotsn-1\n\nChebyshev points of the first kind are the roots of Chebyshev polynomials of the first kind.\n\n\n\n\n\n","category":"method"},{"location":"cheb/#GRSuite.ChebyshevSuite.cheb_grid_second_kind-Union{Tuple{TI}, Tuple{TR}, Tuple{Type{TR}, TI}} where {TR<:AbstractFloat, TI<:Integer}","page":"Chebyshev pseudospectral method","title":"GRSuite.ChebyshevSuite.cheb_grid_second_kind","text":"cheb_grid_second_kind(::Type{TR}, n::TI) where {TR<:AbstractFloat,TI<:Integer}\n\nGenerate Chebyshev points of the second kind on the interval [-1, 1].\n\nArguments\n\nTR: Type parameter for the grid points (e.g., Float64)\nn: Number of grid points\n\nReturns\n\nVector of n Chebyshev points of the second kind\n\nMathematical Formula\n\nx_k = -cosleft(frackpin-1right) quad k = 01ldotsn-1\n\nChebyshev points of the second kind are the extrema of Chebyshev polynomials of the first kind.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = GRSuite","category":"page"},{"location":"#GRSuite","page":"Home","title":"GRSuite","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GRSuite.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GRSuite]","category":"page"}]
}
